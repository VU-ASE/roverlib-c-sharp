// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: segmentation/segmentation.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ProtobufMsgs {

  /// <summary>Holder for reflection information generated from segmentation/segmentation.proto</summary>
  public static partial class SegmentationReflection {

    #region Descriptor
    /// <summary>File descriptor for segmentation/segmentation.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SegmentationReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9zZWdtZW50YXRpb24vc2VnbWVudGF0aW9uLnByb3RvEg1wcm90b2J1Zl9t",
            "c2dzIlMKB1NlZ21lbnQSEAoIcGFja2V0SWQYASABKAMSEQoJc2VnbWVudElk",
            "GAIgASgDEhUKDXRvdGFsU2VnbWVudHMYAyABKAMSDAoEZGF0YRgEIAEoDEIV",
            "WhNhc2UvcGJfc2VnbWVudGF0aW9uYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtobufMsgs.Segment), global::ProtobufMsgs.Segment.Parser, new[]{ "PacketId", "SegmentId", "TotalSegments", "Data" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// 
  /// Control messages exchanged by client(s), the server and the car to send data in multiple segments
  /// 
  /// </summary>
  public sealed partial class Segment : pb::IMessage<Segment> {
    private static readonly pb::MessageParser<Segment> _parser = new pb::MessageParser<Segment>(() => new Segment());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Segment> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtobufMsgs.SegmentationReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Segment() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Segment(Segment other) : this() {
      packetId_ = other.packetId_;
      segmentId_ = other.segmentId_;
      totalSegments_ = other.totalSegments_;
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Segment Clone() {
      return new Segment(this);
    }

    /// <summary>Field number for the "packetId" field.</summary>
    public const int PacketIdFieldNumber = 1;
    private long packetId_;
    /// <summary>
    /// unique and increasing id of each the packet that this segment is part of
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PacketId {
      get { return packetId_; }
      set {
        packetId_ = value;
      }
    }

    /// <summary>Field number for the "segmentId" field.</summary>
    public const int SegmentIdFieldNumber = 2;
    private long segmentId_;
    /// <summary>
    /// unique and increasing id of the segment within the packet
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long SegmentId {
      get { return segmentId_; }
      set {
        segmentId_ = value;
      }
    }

    /// <summary>Field number for the "totalSegments" field.</summary>
    public const int TotalSegmentsFieldNumber = 3;
    private long totalSegments_;
    /// <summary>
    /// total number of segments in the packet
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalSegments {
      get { return totalSegments_; }
      set {
        totalSegments_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 4;
    private pb::ByteString data_ = pb::ByteString.Empty;
    /// <summary>
    /// data of the segment
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Segment);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Segment other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PacketId != other.PacketId) return false;
      if (SegmentId != other.SegmentId) return false;
      if (TotalSegments != other.TotalSegments) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PacketId != 0L) hash ^= PacketId.GetHashCode();
      if (SegmentId != 0L) hash ^= SegmentId.GetHashCode();
      if (TotalSegments != 0L) hash ^= TotalSegments.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PacketId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(PacketId);
      }
      if (SegmentId != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(SegmentId);
      }
      if (TotalSegments != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(TotalSegments);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PacketId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PacketId);
      }
      if (SegmentId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(SegmentId);
      }
      if (TotalSegments != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalSegments);
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Segment other) {
      if (other == null) {
        return;
      }
      if (other.PacketId != 0L) {
        PacketId = other.PacketId;
      }
      if (other.SegmentId != 0L) {
        SegmentId = other.SegmentId;
      }
      if (other.TotalSegments != 0L) {
        TotalSegments = other.TotalSegments;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PacketId = input.ReadInt64();
            break;
          }
          case 16: {
            SegmentId = input.ReadInt64();
            break;
          }
          case 24: {
            TotalSegments = input.ReadInt64();
            break;
          }
          case 34: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
